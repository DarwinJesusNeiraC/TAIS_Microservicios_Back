AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Inventory Management Service

Parameters:
  ProductsTableName:
    Type: String
    Description: Name of the Products DynamoDB table
    Default: ProductsTable

Resources:
  NotasInventarioTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: NotasInventarioTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tipo
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tipo
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  InventarioApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      CorsConfiguration:
        AllowMethods: [POST]
        AllowHeaders: ['Content-Type']
        AllowOrigins: ['*']

  InventoryFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                Resource: 
                  - !GetAtt NotasInventarioTable.Arn
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductsTableName}

  CreateNotaEntradaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.createNotaEntrada
      Runtime: nodejs20.x
      CodeUri: .
      Role: !GetAtt InventoryFunctionRole.Arn
      Environment:
        Variables:
          INVENTORY_TABLE: !Ref NotasInventarioTable
          PRODUCTS_TABLE: !Ref ProductsTableName
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref InventarioApi
            Path: /inventario/nota_entrada
            Method: POST

  CreateNotaSalidaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.createNotaSalida
      Runtime: nodejs20.x
      CodeUri: .
      Role: !GetAtt InventoryFunctionRole.Arn
      Environment:
        Variables:
          INVENTORY_TABLE: !Ref NotasInventarioTable
          PRODUCTS_TABLE: !Ref ProductsTableName
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref InventarioApi
            Path: /inventario/nota_salida
            Method: POST

Outputs:
  InventarioApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${InventarioApi}.execute-api.${AWS::Region}.amazonaws.com/dev/
